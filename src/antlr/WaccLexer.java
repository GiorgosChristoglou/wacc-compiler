// Generated from ./WaccLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WaccLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		IMPORT=1, FILE=2, SEMICOLON=3, BEGIN=4, IS=5, END=6, SKIP=7, READ=8, FREE=9, 
		RETURN=10, EXIT=11, PRINT=12, PRINTLN=13, IF=14, THEN=15, ELSE=16, FI=17, 
		WHILE=18, DO=19, DONE=20, NEWPAIR=21, CALL=22, FST=23, SND=24, INT=25, 
		BOOL=26, CHAR=27, STRING=28, PAIR=29, LEFT_PAR=30, RIGHT_PAR=31, LEFT_SQ=32, 
		RIGHT_SQ=33, COMMA=34, ASSIGNMENT=35, NOT=36, NEGATIVE=37, LEN=38, ORD=39, 
		CHR=40, TIMES=41, DIVIDED=42, MOD=43, PLUS=44, MINUS=45, GREATER=46, GREATER_OR_EQUAL=47, 
		LESS=48, LESS_OR_EQUAL=49, EQUAL=50, AND=51, OR=52, IDENT=53, INTEGER=54, 
		STRING_LITER=55, CHAR_LITER=56, TRUE=57, FALSE=58, NULL=59, COMMENT=60, 
		WHITESPACE=61;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'", 
		"'<'", "'='"
	};
	public static final String[] ruleNames = {
		"IMPORT", "FILE", "SEMICOLON", "BEGIN", "IS", "END", "SKIP", "READ", "FREE", 
		"RETURN", "EXIT", "PRINT", "PRINTLN", "IF", "THEN", "ELSE", "FI", "WHILE", 
		"DO", "DONE", "NEWPAIR", "CALL", "FST", "SND", "INT", "BOOL", "CHAR", 
		"STRING", "PAIR", "LEFT_PAR", "RIGHT_PAR", "LEFT_SQ", "RIGHT_SQ", "COMMA", 
		"ASSIGNMENT", "NOT", "NEGATIVE", "LEN", "ORD", "CHR", "TIMES", "DIVIDED", 
		"MOD", "PLUS", "MINUS", "GREATER", "GREATER_OR_EQUAL", "LESS", "LESS_OR_EQUAL", 
		"EQUAL", "AND", "OR", "IDENT", "DIGIT", "INTEGER", "ESC", "STRING_LITER", 
		"CHAR_LITER", "TRUE", "FALSE", "NULL", "COMMENT", "WHITESPACE"
	};


	public WaccLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WaccLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2?\u019c\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\7\3\u008a\n\3\f\3\16"+
		"\3\u008d\13\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5"+
		"\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3"+
		"\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f"+
		"\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3"+
		"\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3"+
		"\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3"+
		"\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3"+
		"\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3"+
		"\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3"+
		"\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#"+
		"\3$\3$\3%\3%\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3*\3*\3+\3"+
		"+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\60\3\61\3\61\3\62\3\62\3\62\3\63"+
		"\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\65\3\66\3\66\7\66\u0155\n\66\f\66"+
		"\16\66\u0158\13\66\3\67\3\67\38\58\u015d\n8\38\68\u0160\n8\r8\168\u0161"+
		"\39\39\39\39\59\u0168\n9\3:\3:\3:\7:\u016d\n:\f:\16:\u0170\13:\3:\3:\3"+
		";\3;\3;\7;\u0177\n;\f;\16;\u017a\13;\3;\3;\3<\3<\3<\3<\3<\3=\3=\3=\3="+
		"\3=\3=\3>\3>\3>\3>\3>\3?\3?\7?\u0190\n?\f?\16?\u0193\13?\3?\3?\3?\3?\3"+
		"@\3@\3@\3@\5\u016e\u0178\u0191\2A\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23"+
		"\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31"+
		"\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60"+
		"_\61a\62c\63e\64g\65i\66k\67m\2o8q\2s9u:w;y<{=}>\177?\3\2\7\4\2\62;C|"+
		"\5\2C\\aac|\6\2\62;C\\aac|\4\2--//\5\2\13\f\17\17\"\"\u01a3\2\3\3\2\2"+
		"\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3"+
		"\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2"+
		"\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2"+
		"\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2"+
		"\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3"+
		"\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2"+
		"\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2"+
		"W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3"+
		"\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2o\3\2\2\2\2s\3\2\2"+
		"\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2"+
		"\2\3\u0081\3\2\2\2\5\u008b\3\2\2\2\7\u0094\3\2\2\2\t\u0096\3\2\2\2\13"+
		"\u009c\3\2\2\2\r\u009f\3\2\2\2\17\u00a3\3\2\2\2\21\u00a8\3\2\2\2\23\u00ad"+
		"\3\2\2\2\25\u00b2\3\2\2\2\27\u00b9\3\2\2\2\31\u00be\3\2\2\2\33\u00c4\3"+
		"\2\2\2\35\u00cc\3\2\2\2\37\u00cf\3\2\2\2!\u00d4\3\2\2\2#\u00d9\3\2\2\2"+
		"%\u00dc\3\2\2\2\'\u00e2\3\2\2\2)\u00e5\3\2\2\2+\u00ea\3\2\2\2-\u00f2\3"+
		"\2\2\2/\u00f7\3\2\2\2\61\u00fb\3\2\2\2\63\u00ff\3\2\2\2\65\u0103\3\2\2"+
		"\2\67\u0108\3\2\2\29\u010d\3\2\2\2;\u0114\3\2\2\2=\u0119\3\2\2\2?\u011b"+
		"\3\2\2\2A\u011d\3\2\2\2C\u011f\3\2\2\2E\u0121\3\2\2\2G\u0123\3\2\2\2I"+
		"\u0125\3\2\2\2K\u0127\3\2\2\2M\u0129\3\2\2\2O\u012d\3\2\2\2Q\u0131\3\2"+
		"\2\2S\u0135\3\2\2\2U\u0137\3\2\2\2W\u0139\3\2\2\2Y\u013b\3\2\2\2[\u013d"+
		"\3\2\2\2]\u013f\3\2\2\2_\u0141\3\2\2\2a\u0144\3\2\2\2c\u0146\3\2\2\2e"+
		"\u0149\3\2\2\2g\u014c\3\2\2\2i\u014f\3\2\2\2k\u0152\3\2\2\2m\u0159\3\2"+
		"\2\2o\u015c\3\2\2\2q\u0167\3\2\2\2s\u0169\3\2\2\2u\u0173\3\2\2\2w\u017d"+
		"\3\2\2\2y\u0182\3\2\2\2{\u0188\3\2\2\2}\u018d\3\2\2\2\177\u0198\3\2\2"+
		"\2\u0081\u0082\7k\2\2\u0082\u0083\7o\2\2\u0083\u0084\7r\2\2\u0084\u0085"+
		"\7q\2\2\u0085\u0086\7t\2\2\u0086\u0087\7v\2\2\u0087\4\3\2\2\2\u0088\u008a"+
		"\t\2\2\2\u0089\u0088\3\2\2\2\u008a\u008d\3\2\2\2\u008b\u0089\3\2\2\2\u008b"+
		"\u008c\3\2\2\2\u008c\u008e\3\2\2\2\u008d\u008b\3\2\2\2\u008e\u008f\7\60"+
		"\2\2\u008f\u0090\7y\2\2\u0090\u0091\7c\2\2\u0091\u0092\7e\2\2\u0092\u0093"+
		"\7e\2\2\u0093\6\3\2\2\2\u0094\u0095\7=\2\2\u0095\b\3\2\2\2\u0096\u0097"+
		"\7d\2\2\u0097\u0098\7g\2\2\u0098\u0099\7i\2\2\u0099\u009a\7k\2\2\u009a"+
		"\u009b\7p\2\2\u009b\n\3\2\2\2\u009c\u009d\7k\2\2\u009d\u009e\7u\2\2\u009e"+
		"\f\3\2\2\2\u009f\u00a0\7g\2\2\u00a0\u00a1\7p\2\2\u00a1\u00a2\7f\2\2\u00a2"+
		"\16\3\2\2\2\u00a3\u00a4\7u\2\2\u00a4\u00a5\7m\2\2\u00a5\u00a6\7k\2\2\u00a6"+
		"\u00a7\7r\2\2\u00a7\20\3\2\2\2\u00a8\u00a9\7t\2\2\u00a9\u00aa\7g\2\2\u00aa"+
		"\u00ab\7c\2\2\u00ab\u00ac\7f\2\2\u00ac\22\3\2\2\2\u00ad\u00ae\7h\2\2\u00ae"+
		"\u00af\7t\2\2\u00af\u00b0\7g\2\2\u00b0\u00b1\7g\2\2\u00b1\24\3\2\2\2\u00b2"+
		"\u00b3\7t\2\2\u00b3\u00b4\7g\2\2\u00b4\u00b5\7v\2\2\u00b5\u00b6\7w\2\2"+
		"\u00b6\u00b7\7t\2\2\u00b7\u00b8\7p\2\2\u00b8\26\3\2\2\2\u00b9\u00ba\7"+
		"g\2\2\u00ba\u00bb\7z\2\2\u00bb\u00bc\7k\2\2\u00bc\u00bd\7v\2\2\u00bd\30"+
		"\3\2\2\2\u00be\u00bf\7r\2\2\u00bf\u00c0\7t\2\2\u00c0\u00c1\7k\2\2\u00c1"+
		"\u00c2\7p\2\2\u00c2\u00c3\7v\2\2\u00c3\32\3\2\2\2\u00c4\u00c5\7r\2\2\u00c5"+
		"\u00c6\7t\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7p\2\2\u00c8\u00c9\7v\2\2"+
		"\u00c9\u00ca\7n\2\2\u00ca\u00cb\7p\2\2\u00cb\34\3\2\2\2\u00cc\u00cd\7"+
		"k\2\2\u00cd\u00ce\7h\2\2\u00ce\36\3\2\2\2\u00cf\u00d0\7v\2\2\u00d0\u00d1"+
		"\7j\2\2\u00d1\u00d2\7g\2\2\u00d2\u00d3\7p\2\2\u00d3 \3\2\2\2\u00d4\u00d5"+
		"\7g\2\2\u00d5\u00d6\7n\2\2\u00d6\u00d7\7u\2\2\u00d7\u00d8\7g\2\2\u00d8"+
		"\"\3\2\2\2\u00d9\u00da\7h\2\2\u00da\u00db\7k\2\2\u00db$\3\2\2\2\u00dc"+
		"\u00dd\7y\2\2\u00dd\u00de\7j\2\2\u00de\u00df\7k\2\2\u00df\u00e0\7n\2\2"+
		"\u00e0\u00e1\7g\2\2\u00e1&\3\2\2\2\u00e2\u00e3\7f\2\2\u00e3\u00e4\7q\2"+
		"\2\u00e4(\3\2\2\2\u00e5\u00e6\7f\2\2\u00e6\u00e7\7q\2\2\u00e7\u00e8\7"+
		"p\2\2\u00e8\u00e9\7g\2\2\u00e9*\3\2\2\2\u00ea\u00eb\7p\2\2\u00eb\u00ec"+
		"\7g\2\2\u00ec\u00ed\7y\2\2\u00ed\u00ee\7r\2\2\u00ee\u00ef\7c\2\2\u00ef"+
		"\u00f0\7k\2\2\u00f0\u00f1\7t\2\2\u00f1,\3\2\2\2\u00f2\u00f3\7e\2\2\u00f3"+
		"\u00f4\7c\2\2\u00f4\u00f5\7n\2\2\u00f5\u00f6\7n\2\2\u00f6.\3\2\2\2\u00f7"+
		"\u00f8\7h\2\2\u00f8\u00f9\7u\2\2\u00f9\u00fa\7v\2\2\u00fa\60\3\2\2\2\u00fb"+
		"\u00fc\7u\2\2\u00fc\u00fd\7p\2\2\u00fd\u00fe\7f\2\2\u00fe\62\3\2\2\2\u00ff"+
		"\u0100\7k\2\2\u0100\u0101\7p\2\2\u0101\u0102\7v\2\2\u0102\64\3\2\2\2\u0103"+
		"\u0104\7d\2\2\u0104\u0105\7q\2\2\u0105\u0106\7q\2\2\u0106\u0107\7n\2\2"+
		"\u0107\66\3\2\2\2\u0108\u0109\7e\2\2\u0109\u010a\7j\2\2\u010a\u010b\7"+
		"c\2\2\u010b\u010c\7t\2\2\u010c8\3\2\2\2\u010d\u010e\7u\2\2\u010e\u010f"+
		"\7v\2\2\u010f\u0110\7t\2\2\u0110\u0111\7k\2\2\u0111\u0112\7p\2\2\u0112"+
		"\u0113\7i\2\2\u0113:\3\2\2\2\u0114\u0115\7r\2\2\u0115\u0116\7c\2\2\u0116"+
		"\u0117\7k\2\2\u0117\u0118\7t\2\2\u0118<\3\2\2\2\u0119\u011a\7*\2\2\u011a"+
		">\3\2\2\2\u011b\u011c\7+\2\2\u011c@\3\2\2\2\u011d\u011e\7]\2\2\u011eB"+
		"\3\2\2\2\u011f\u0120\7_\2\2\u0120D\3\2\2\2\u0121\u0122\7.\2\2\u0122F\3"+
		"\2\2\2\u0123\u0124\7?\2\2\u0124H\3\2\2\2\u0125\u0126\7#\2\2\u0126J\3\2"+
		"\2\2\u0127\u0128\7/\2\2\u0128L\3\2\2\2\u0129\u012a\7n\2\2\u012a\u012b"+
		"\7g\2\2\u012b\u012c\7p\2\2\u012cN\3\2\2\2\u012d\u012e\7q\2\2\u012e\u012f"+
		"\7t\2\2\u012f\u0130\7f\2\2\u0130P\3\2\2\2\u0131\u0132\7e\2\2\u0132\u0133"+
		"\7j\2\2\u0133\u0134\7t\2\2\u0134R\3\2\2\2\u0135\u0136\7,\2\2\u0136T\3"+
		"\2\2\2\u0137\u0138\7\61\2\2\u0138V\3\2\2\2\u0139\u013a\7\'\2\2\u013aX"+
		"\3\2\2\2\u013b\u013c\7-\2\2\u013cZ\3\2\2\2\u013d\u013e\7/\2\2\u013e\\"+
		"\3\2\2\2\u013f\u0140\7@\2\2\u0140^\3\2\2\2\u0141\u0142\7@\2\2\u0142\u0143"+
		"\7?\2\2\u0143`\3\2\2\2\u0144\u0145\7>\2\2\u0145b\3\2\2\2\u0146\u0147\7"+
		">\2\2\u0147\u0148\7?\2\2\u0148d\3\2\2\2\u0149\u014a\7?\2\2\u014a\u014b"+
		"\7?\2\2\u014bf\3\2\2\2\u014c\u014d\7(\2\2\u014d\u014e\7(\2\2\u014eh\3"+
		"\2\2\2\u014f\u0150\7~\2\2\u0150\u0151\7~\2\2\u0151j\3\2\2\2\u0152\u0156"+
		"\t\3\2\2\u0153\u0155\t\4\2\2\u0154\u0153\3\2\2\2\u0155\u0158\3\2\2\2\u0156"+
		"\u0154\3\2\2\2\u0156\u0157\3\2\2\2\u0157l\3\2\2\2\u0158\u0156\3\2\2\2"+
		"\u0159\u015a\4\62;\2\u015an\3\2\2\2\u015b\u015d\t\5\2\2\u015c\u015b\3"+
		"\2\2\2\u015c\u015d\3\2\2\2\u015d\u015f\3\2\2\2\u015e\u0160\5m\67\2\u015f"+
		"\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161\u015f\3\2\2\2\u0161\u0162\3\2"+
		"\2\2\u0162p\3\2\2\2\u0163\u0164\7^\2\2\u0164\u0168\7$\2\2\u0165\u0166"+
		"\7^\2\2\u0166\u0168\7^\2\2\u0167\u0163\3\2\2\2\u0167\u0165\3\2\2\2\u0168"+
		"r\3\2\2\2\u0169\u016e\7$\2\2\u016a\u016d\5q9\2\u016b\u016d\13\2\2\2\u016c"+
		"\u016a\3\2\2\2\u016c\u016b\3\2\2\2\u016d\u0170\3\2\2\2\u016e\u016f\3\2"+
		"\2\2\u016e\u016c\3\2\2\2\u016f\u0171\3\2\2\2\u0170\u016e\3\2\2\2\u0171"+
		"\u0172\7$\2\2\u0172t\3\2\2\2\u0173\u0178\7)\2\2\u0174\u0177\5q9\2\u0175"+
		"\u0177\13\2\2\2\u0176\u0174\3\2\2\2\u0176\u0175\3\2\2\2\u0177\u017a\3"+
		"\2\2\2\u0178\u0179\3\2\2\2\u0178\u0176\3\2\2\2\u0179\u017b\3\2\2\2\u017a"+
		"\u0178\3\2\2\2\u017b\u017c\7)\2\2\u017cv\3\2\2\2\u017d\u017e\7v\2\2\u017e"+
		"\u017f\7t\2\2\u017f\u0180\7w\2\2\u0180\u0181\7g\2\2\u0181x\3\2\2\2\u0182"+
		"\u0183\7h\2\2\u0183\u0184\7c\2\2\u0184\u0185\7n\2\2\u0185\u0186\7u\2\2"+
		"\u0186\u0187\7g\2\2\u0187z\3\2\2\2\u0188\u0189\7p\2\2\u0189\u018a\7w\2"+
		"\2\u018a\u018b\7n\2\2\u018b\u018c\7n\2\2\u018c|\3\2\2\2\u018d\u0191\7"+
		"%\2\2\u018e\u0190\13\2\2\2\u018f\u018e\3\2\2\2\u0190\u0193\3\2\2\2\u0191"+
		"\u0192\3\2\2\2\u0191\u018f\3\2\2\2\u0192\u0194\3\2\2\2\u0193\u0191\3\2"+
		"\2\2\u0194\u0195\7\f\2\2\u0195\u0196\3\2\2\2\u0196\u0197\b?\2\2\u0197"+
		"~\3\2\2\2\u0198\u0199\t\6\2\2\u0199\u019a\3\2\2\2\u019a\u019b\b@\2\2\u019b"+
		"\u0080\3\2\2\2\r\2\u008b\u0156\u015c\u0161\u0167\u016c\u016e\u0176\u0178"+
		"\u0191\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}